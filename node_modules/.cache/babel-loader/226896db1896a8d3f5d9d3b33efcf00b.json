{"ast":null,"code":"var _jsxFileName = \"/home/internjs/clone/DID_YOU_MEAN/src/pages/client/main-page.tsx\";\nimport * as React from \"react\";\nimport Dictionary from \"../../data/dictionary.json\"; // Extends a collection of HTML form control elements.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction findInDictionary(currentWord) {\n  // Find the nearest word and store it in the same position\n  const currentWordCase = currentWord.toLowerCase();\n  let word = \"\";\n\n  for (let i of Dictionary) {\n    let paraphrased = \"\";\n\n    if (i.word.toLowerCase() === currentWordCase) {\n      return i.word + \" line 18\";\n    } else {// for (let j of Dictionary) {\n      // \tlet currentWordSplit: string[] = currentWord.split(\"\");\n      // \tlet currentWordDictionarySplit: string[] = j.word.split(\"\");\n      // \tlet currentDictionaryWordLength: number = j.word.length;\n      // \tlet letterMatchCount: number = 0;\n      // \tlet standardPercentOfMatch: number = Math.floor(\n      // \t\t0.4 * currentDictionaryWordLength\n      // \t);\n      // \tfor (let k in currentWordDictionarySplit) {\n      // \t\tif (currentWordDictionarySplit[k] === currentWordSplit[k]) {\n      // \t\t\tletterMatchCount++;\n      // \t\t}\n      // \t}\n      // \tif (letterMatchCount >= standardPercentOfMatch) {\n      // \t\treturn j.word + \" hello\";\n      // \t}\n      // }\n    }\n  }\n\n  return word;\n}\n\nfunction extracted(input) {\n  const inputSplitWhiteSpace = input.split(\" \");\n  let paraphrased = \"\";\n\n  for (let currentWord of inputSplitWhiteSpace) {\n    // If a word is not in the dictionary store find the closest word.\n    const validateWord = findInDictionary(currentWord);\n    paraphrased += validateWord + \" \";\n  }\n\n  console.log(\"Did you mean: \" + paraphrased);\n  return paraphrased;\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  extracted(event.currentTarget.phrase.value);\n}\n\nfunction MainPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mt-6 text-center text-xl font-extrabold \",\n            children: \"phrase?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mt-8 space-y-6\",\n          action: \"#\",\n          method: \"GET\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-md shadow-sm -space-y-px\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email-address\",\n                className: \"sr-only\",\n                children: \"Phrase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"phrase\",\n                name: \"phrase\",\n                type: \"text\",\n                autoComplete: \"phrase\",\n                required: true,\n                className: \"appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\",\n                placeholder: \"Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n              children: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","Dictionary","findInDictionary","currentWord","currentWordCase","toLowerCase","word","i","paraphrased","extracted","input","inputSplitWhiteSpace","split","validateWord","console","log","handleSubmit","event","preventDefault","currentTarget","phrase","value","MainPage"],"sources":["/home/internjs/clone/DID_YOU_MEAN/src/pages/client/main-page.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Dictionary from \"../../data/dictionary.json\";\n// Extends a collection of HTML form control elements.\ninterface FormElements extends HTMLFormControlsCollection {\n\tphrase: HTMLInputElement;\n}\ninterface PhraseInputElement extends HTMLFormElement {\n\telements: FormElements;\n}\n\nfunction findInDictionary(currentWord: string): string {\n\t// Find the nearest word and store it in the same position\n\tconst currentWordCase = currentWord.toLowerCase();\n\tlet word = \"\";\n\tfor (let i of Dictionary) {\n\t\tlet paraphrased: string = \"\";\n\t\tif (i.word.toLowerCase() === currentWordCase) {\n\t\t\treturn i.word + \" line 18\";\n\t\t} else {\n\t\t\t// for (let j of Dictionary) {\n\t\t\t// \tlet currentWordSplit: string[] = currentWord.split(\"\");\n\t\t\t// \tlet currentWordDictionarySplit: string[] = j.word.split(\"\");\n\t\t\t// \tlet currentDictionaryWordLength: number = j.word.length;\n\t\t\t// \tlet letterMatchCount: number = 0;\n\t\t\t// \tlet standardPercentOfMatch: number = Math.floor(\n\t\t\t// \t\t0.4 * currentDictionaryWordLength\n\t\t\t// \t);\n\t\t\t// \tfor (let k in currentWordDictionarySplit) {\n\t\t\t// \t\tif (currentWordDictionarySplit[k] === currentWordSplit[k]) {\n\t\t\t// \t\t\tletterMatchCount++;\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// \tif (letterMatchCount >= standardPercentOfMatch) {\n\t\t\t// \t\treturn j.word + \" hello\";\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\t}\n\treturn word;\n}\nfunction extracted(input: String): string {\n\tconst inputSplitWhiteSpace: string[] = input.split(\" \");\n\tlet paraphrased: string = \"\";\n\tfor (let currentWord of inputSplitWhiteSpace) {\n\t\t// If a word is not in the dictionary store find the closest word.\n\t\tconst validateWord: string = findInDictionary(currentWord);\n\t\tparaphrased += validateWord + \" \";\n\t}\n\tconsole.log(\"Did you mean: \" + paraphrased);\n\treturn paraphrased;\n}\n\nfunction handleSubmit(event: React.FormEvent<PhraseInputElement>) {\n\tevent.preventDefault();\n\textracted(event.currentTarget.phrase.value);\n}\nfunction MainPage() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n\t\t\t\t<div className=\"max-w-md w-full space-y-8\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* <img\n\t\t\t\t\t\t\tclassName=\"mx-auto h-12 w-auto\"\n\t\t\t\t\t\t\tsrc=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n\t\t\t\t\t\t\talt=\"Workflow\"\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<h2 className=\"mt-6 text-center text-xl font-extrabold \">\n\t\t\t\t\t\t\tphrase?\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"mt-8 space-y-6\"\n\t\t\t\t\t\taction=\"#\"\n\t\t\t\t\t\tmethod=\"GET\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"rounded-md shadow-sm -space-y-px\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label htmlFor=\"email-address\" className=\"sr-only\">\n\t\t\t\t\t\t\t\t\tPhrase\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"phrase\"\n\t\t\t\t\t\t\t\t\tname=\"phrase\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"phrase\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tclassName=\"appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Input\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default MainPage;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB,C,CACA;;;;AAQA,SAASC,gBAAT,CAA0BC,WAA1B,EAAuD;EACtD;EACA,MAAMC,eAAe,GAAGD,WAAW,CAACE,WAAZ,EAAxB;EACA,IAAIC,IAAI,GAAG,EAAX;;EACA,KAAK,IAAIC,CAAT,IAAcN,UAAd,EAA0B;IACzB,IAAIO,WAAmB,GAAG,EAA1B;;IACA,IAAID,CAAC,CAACD,IAAF,CAAOD,WAAP,OAAyBD,eAA7B,EAA8C;MAC7C,OAAOG,CAAC,CAACD,IAAF,GAAS,UAAhB;IACA,CAFD,MAEO,CACN;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACD;;EACD,OAAOA,IAAP;AACA;;AACD,SAASG,SAAT,CAAmBC,KAAnB,EAA0C;EACzC,MAAMC,oBAA8B,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAvC;EACA,IAAIJ,WAAmB,GAAG,EAA1B;;EACA,KAAK,IAAIL,WAAT,IAAwBQ,oBAAxB,EAA8C;IAC7C;IACA,MAAME,YAAoB,GAAGX,gBAAgB,CAACC,WAAD,CAA7C;IACAK,WAAW,IAAIK,YAAY,GAAG,GAA9B;EACA;;EACDC,OAAO,CAACC,GAAR,CAAY,mBAAmBP,WAA/B;EACA,OAAOA,WAAP;AACA;;AAED,SAASQ,YAAT,CAAsBC,KAAtB,EAAkE;EACjEA,KAAK,CAACC,cAAN;EACAT,SAAS,CAACQ,KAAK,CAACE,aAAN,CAAoBC,MAApB,CAA2BC,KAA5B,CAAT;AACA;;AACD,SAASC,QAAT,GAAoB;EACnB,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,wEAAf;MAAA,uBACC;QAAK,SAAS,EAAC,2BAAf;QAAA,wBACC;UAAA,uBAMC;YAAI,SAAS,EAAC,0CAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAND;UAAA;UAAA;UAAA;QAAA,QADD,eAWC;UACC,SAAS,EAAC,gBADX;UAEC,MAAM,EAAC,GAFR;UAGC,MAAM,EAAC,KAHR;UAIC,QAAQ,EAAEN,YAJX;UAAA,wBAMC;YAAK,SAAS,EAAC,kCAAf;YAAA,uBACC;cAAA,wBACC;gBAAO,OAAO,EAAC,eAAf;gBAA+B,SAAS,EAAC,SAAzC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADD,eAIC;gBACC,EAAE,EAAC,QADJ;gBAEC,IAAI,EAAC,QAFN;gBAGC,IAAI,EAAC,MAHN;gBAIC,YAAY,EAAC,QAJd;gBAKC,QAAQ,MALT;gBAMC,SAAS,EAAC,0MANX;gBAOC,WAAW,EAAC;cAPb;gBAAA;gBAAA;gBAAA;cAAA,QAJD;YAAA;cAAA;cAAA;cAAA;YAAA;UADD;YAAA;YAAA;YAAA;UAAA,QAND,eAuBC;YAAA,uBACC;cACC,IAAI,EAAC,QADN;cAEC,SAAS,EAAC,qOAFX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADD;YAAA;YAAA;YAAA;UAAA,QAvBD;QAAA;UAAA;UAAA;UAAA;QAAA,QAXD;MAAA;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAkDA;;KAnDQM,Q;AAoDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}